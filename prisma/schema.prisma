// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model Post {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    authorId  String

    content String @db.VarChar(255)

    @@index([authorId])
}

model Profile {
    id        String   @id @default(cuid())
    authorId  String   @unique
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())

    username    String @unique @db.VarChar(255)
    description String @db.VarChar(255)

    // urls
    githubUsername  String?
    twitterUsername String?
    websiteUsername String?
    readcvUsername  String?

    FollowersOnProfile FollowersOnProfile[]

    @@index([authorId])
}

model FollowersOnProfile {
    profile    Profile  @relation(fields: [profileId], references: [id])
    profileId  String
    follower   Follower @relation(fields: [followerId], references: [id])
    followerId String

    assignedAt DateTime @default(now())
    assignedBy String

    @@id([profileId, followerId])
    @@index([profileId])
    @@index([followerId])
}

model Follower {
    id                 String               @id @default(cuid())
    authorId           String
    FollowersOnProfile FollowersOnProfile[]
}
